(Stuff before this wasn't worth mentioning...got platform-specific code in
there, ported initial TurtleSpace and util stuff, hacked Makefile and a
standalone program for initial testing.)

05052001 - Plugged in turtle coordinate calculating code in Turtle.cpp.
            Got turtle rendering in GTKTurtleSpaceRenderer. Added gdk_flush()
            calls to GTKTurtleSpaceRenderer, so it syncs up with the X server
            and doesn't hog the processor. Added -lm to the linker line.
05072001 - Filled in offscreen rendering API, for page flipping/bitblt'ing
            of entire screen at once. This should facilitate using Toby for
            animation. FrameBufferTurtleSpaceRenderer hasn't filled in this
            API, which means that for now, only GTKTurtleSpaceRenderer works.
            The FrameBuffer renderer needs a rewrite anyhow. Little tweaks to
            the GTK renderer. Modified standalone.cpp to test offscreen
            rendering. Started initial Tokenizer implementation. Feeling
            intimidated. Added some debugging output to Reader subclasses.
            Changed some internal structure names.
05252001 - Added programs/birthday.toby.
07242001 - Added TobyLoader module and Unix/Null implementations.
07262001 - Fixed some comments in the platform/clocks tree. Wrote up
           documentation for my wacky new i18n scheme. Renamed src/localization
           to src/i18n. Committed a buttload of stuff to CVS, which is now
           publically hosted at icculus.org.
07272001 - Rewrote the tobylang files for the new format, and put together
            util/TobyLanguage.h and util/TobyLanguage.cpp for the new format.
            Naturally, this breaks everything.  :)
08042001 - Patched NullTurtleSpaceRenderer to compile. Redesigned the
            TobyReader hierarchy somewhat; TobyReader.cpp exists (and was
            added to the Makefile), EOF reads don't throw an IOException
            anymore, added a pushback to the base class, moved readLine to
            TobyReader (and fixed the MacOS endline thing). readLine can be
            overridden by a subclass for something more efficient but less
            generic. Added TobyReader::isOpened(). This is preparation for the
            Tokenizer class. Added -ldl to UnixLoader's LDFLAGS. Rewrote the
            platform-specific stuff to call static methods in the baseclass,
            which is implemented in the subclasses' source files. Moved the
            tiny bit of code in util/TobyClock.h to util/TobyClock.cpp, and
            added it to the Makefile.
08062001 - Started defining io/Tokenizer.h.
08082001 - Updated i18n docs, and changed TOBYSTR to TOBYI18N in the langfiles.
08162001 - Started implementing io/Tokenizer.cpp. Mostly done, but a
            significant amount is left to be done to it.
08212001 - Finished implementing io/Tokenizer.cpp. Seems to work pretty well
            for tokenizing C++ code. Added src/test/ directory and
            src/test/tokenizer.cpp to test...guess what. Changed "debugging"
            flag in the Makefile to "debug" and added a "tests" rule.
08222001 - Started implementing a quick-and-dirty XML parser (DOM only).
            Changed my email address from icculus@linuxgames.com to
            icculus@clutteredmind.org everywhere.
08242001 - Continued work on XML parser. Added Tokenizer::setNumbersAreWords().
            Created an XMLNode class, and changed TobyXML to XMLTree. Added
            Tokenizer::mustGetWord().
08252001 - Fixed line counter in Tokenizer. TobyString now has length() and
            substr() and append(const char *) methods.
            TobyCollection::insertElement() now returns bool. Added
            TobyCollection::addElement(). Other fixes in the Collection class.
            More work on XMLTree; seems complete.
08262001 - Wrote src/test/xml.cpp, and added xml test and bin directory to
            Makefile. Debugged. Fixed problems in TobyCollection::remove().
            Commited XML stuff to CVS. _D() debugging is disabled in
            TobyReader by default, now, to reduce debug spam. Started writing
            up docs/subsystems/code_generation.txt. Put note at top of old
            changelog.
08272001 - XMLTree now has a null parent node that holds all the toplevel
            nodes. Fixes to Tokenizer. Wrote up initial Toby language spec in
            the working XML format.
08282001 - Whitespace is now ignored in the XMLNode's text field. Dunno if
            this is going to be problematic in general, but for my purposes,
            it's probably okay. Fixed up src/text/xml.cpp to have prettier
            output. Added '\'' as a quote char in the XML tokenizer. Rewrote
            Tokenizer::tokenizeLiteralString(), so it works like I want it to
            now (calling application must handle escaped chars, escaping in
            the Tokenizer just prevents premature ending of literal strings).
            Wrote src/test/langdef.cpp to do quick-and-dirty XML validation
            for the langdef files. I should really write a DTD and have an
            external tool do this right. Moved src/standalone.cpp to
            src/standalone/toby.cpp. Changed my mind, and reenabled whitespace
            in the XML tokenizer.
08292001 - Renamed docs/subsystems/code_generation.txt to
            docs/subsystems/code_execution.txt. Wrote up
            docs/subsystems/langdef_tags.txt. Decided <tokenizer> should only
            be allowed as a child of <language> in the langdef format, and
            changed the test program accordingly. The test program now
            distinguishes between errors and warnings, and outputs warning and
            error counts at the end of execution.
08312001 - Renamed langdefs/ to grammars/, and docs/subsystems/langdef_tags.txt
            to docs/subsystems/grammar_tags.txt.
09022001 - Happy September. Committed docs/subsystems/code_generation.txt,
            docs/subsystems/grammar_tags.txt and docs/subsystems/xml.txt.
            Changed TobyCollection::size() to TobyCollection::getSize(), since
            that just makes more sense. This touched a couple of source files.
            Renamed src/test/langdef.cpp to src/test/grammar.cpp. Updated
            that source and docs/subsystem/grammar_tags.txt with reqwordchars
            and such. Added needed structure to src/test/grammar.cpp for
            testing unique elements of specific tags. Started on a lexer/
            directory and the LexerRule hierarchy.
09022001 - Redesigned the grammar's...uh, grammar a little. Started writing
            the Lexer. Added append(int) and append(float) to TobyString.
09032001 - Continued to design the Lexer subsystem.
09042001 - Tons of work. Lots of implementation on the lexer, a bunch of
            additions and enhancements to the Makefile. The XML schema for
            grammars has changed a bit. Updated most of the existing subsystem
            docs. Added XMLNode::getAttributeValue(), for convenience.
09052001 - Started changing ints to size_t and long, where appropriate. Thus
            far, src/io/Tokenizer.* and related code has been the only place
            this has been changed, but it will be necessary to get this
            building on CodeWarrior for MacOS Classic eventually. More work
            on the lexer. Added TobyString::append(bool),
            TobyString::append(double), and TobyString::append(long). Added
            caseSensitive and ignoreNewlines flags to Tokenizer. Added
            XMLNode::getAttributeDefault() for even more convenience.

// end of changelog.txt ...

